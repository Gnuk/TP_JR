public class Mine{
	/*
	* Cannaux
	*/
	private static op void niveau_H2O(int);
	private static op void niveau_CO(int);
	private static op void niveau_CH4(int);
	private static op void alerte_H2O_haut();
	private static op void alerte_H2O_bas();
	private static op void alerte_gaz_haut();
	private static op void alerte_gaz_bas();
	private static op void activ_ventil();
	private static op void activ_pompe();
	private static op void desactiv_ventil();
	private static op void desactiv_pompe();
	
	/*
	* Processus
	*/
	private op void capteurH2O(int);
	private op void capteurCO(int);
	private op void capteurCH4(int);
	private op void ventilateur();
	private op void pompe();
	private op void d_H2O_haut();
	private op void d_H2O_bas();
	private op void d_gaz_bas();
	private op void d_H2O_bas_gaz();
	private op void commande();
	private op void commandeH20Haut();
	private op void commandeH20Bas();
	private op void commandVentil();
	private op void commandPompe();

	private static final int niveau_H2O_haut = 80;
	private static final int niveau_H2O_bas = 20;
	private static final int seuil_CO = 80;
	private static final int seuil_CH4 = 80;
	
	private static boolean etatPompe = false;
	private static boolean etatVentilateur = false;

// ========================================================================== //

	private static int changeVal(int val, boolean etat, int add, int sub){
		if(etat == true){
			val = val-sub;
		}
		val=val+add;
		if(val<0){
			val = 0;
		}
		return val;
	}

	/**
	* Représentation du système
	*/
	private void capteurH2O(int val){
		val = changeVal(val, etatPompe, 3, 5);
		call niveau_H2O(val);
		System.out.println("H2O : " + val + "%");
		send capteurH2O(val);
	}
	
	private void capteurCO(int val){
		val = changeVal(val, etatVentilateur, 3, 7);
		call niveau_CO(val);
		System.out.println("CO : " + val + "%");
		send capteurCO(val);
		
	}
	
	private void capteurCH4(int val){
		val = changeVal(val, etatVentilateur, 3, 7);
		call niveau_CH4(val);
		System.out.println("CH4 : " + val + "%");
		send capteurCH4(val);
	}
	
	private void ventilateur(){
		inni void activ_ventil(){
			System.out.println("Ventilateur Activée");
			etatVentilateur = true;
		}
		[] void desactiv_ventil(){
			System.out.println("Ventilateur Désactivé");
			etatVentilateur = false;
		}
		send ventilateur();
	}
	
	private void pompe(){
		inni void activ_pompe(){
			System.out.println("Pompe Activée");
			etatPompe = true;
		}
		[] void desactiv_pompe(){
			System.out.println("Pompe Désactivée");
			etatPompe = false;
		}
		send pompe();
	}


// ========================================================================== //

	/**
	* Détection du niveau d'eau haut
	* d_H2O_haut(niveau_H2O, alerte_H2O_h + iaut, niveau_H2O_haut)
	*/
	private void d_H2O_haut(){
		inni void niveau_H2O(int v){
			if(v<niveau_H2O_haut){
				send d_H2O_haut();
			}
			else{
				call alerte_H2O_haut();
			}
		}
	}

	/**
	* Détection du niveau d'eau bas
	* d_H2O_bas(niveau_H2O, alerte_H2O_bas, niveau_H2O_bas)
	*/
	private void d_H2O_bas(){
		inni void niveau_H2O(int v){
			if(v>niveau_H2O_bas){
				send d_H2O_bas();
			}
			else{
				call alerte_H2O_bas();
			}
		}
	}

	/**
	* Détection du niveau de gaz bas
	* d_gaz_bas(niveau_CO, niveau_CH4, alerte_gaz_haut, alerte_gaz_bas, seuil_CO, seuil_CH4)
	*/
	private void d_gaz_bas(){
		inni void niveau_CO(int vCO){
			inni void niveau_CH4(int vCH4){
				if(vCO > seuil_CO || vCH4 > seuil_CH4){
					send d_gaz_bas();
				}
				else{
					call alerte_gaz_bas();
				}
			}
		}
	}
	
	/**
	* Détection du niveau d'eau et du gaz bas
	* d_H2O_bas_gaz(niveau_H2O, niveau_CO, niveau_CH4, alerte_H2O_bas, seuil_CO, seuil_CH4, activ_ventil)
	*/
	private void d_H2O_bas_gaz(){
		inni void niveau_H2O(int vH2O){
			if(vH2O < niveau_H2O_bas){
				call alerte_H2O_bas();
			}
			else{
				inni void niveau_CO(int vCO){
					inni void niveau_CH4(int vCH4){
						if(vCO > seuil_CO || vCH4 > seuil_CH4){
							call activ_ventil();
							send d_H2O_bas_gaz();
						}
						else{
							send d_H2O_bas_gaz();
						}
					}
				}
			}
		}
	}
	
	/**
	* Commande
	* commande(niveau_H2O, niveau_CO, niveau_CH4, alerte_H2O_haut, alerte_H2O_bas, alerte_gaz_haut, alerte_gaz_bas, niveau_H2O_haut, niveau_H2O_bas, seuil_CO, seuil_CH4, activ_pompe, desactiv_pompe, activ_ventil, desactiv_centil)
	*/
	private void commande(){
		send d_H2O_haut();
		send commandeH20Haut();
		send commandeH20Bas();
	}
	
	private void commandeH20Haut(){
		inni void alerte_H2O_haut(){
			inni void niveau_CO(int vCO){
				inni void niveau_CH4(int vCH4){
					if(vCO > seuil_CO || vCH4 > seuil_CH4){
						send commandVentil();
						send commandPompe();
					}
					else{
						call activ_pompe();
						send d_H2O_bas_gaz();
					}
				}
			}
		}
	}
	
	private void commandeH20Bas(){
		inni void alerte_H2O_bas(){
			call desactiv_pompe();
			call desactiv_ventil();
			send commande();
		}
	}
	
	private void commandVentil(){
		call activ_ventil();
		send d_gaz_bas();
	}
	
	private void commandPompe(){
		inni void alerte_gaz_bas(){
			call activ_pompe();
			send d_gaz_bas();
		}
	}
	
	/**
	* Système
	*/
	private Mine(){
 		send commande();
		send capteurH2O(50);
		send capteurCO(50);
		send capteurCH4(50);
		send ventilateur();
		send pompe();
	}
	
	public static void main(String[] args){
		new Mine();
	}
}